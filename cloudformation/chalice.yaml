AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Tagged Image Manager System
Parameters:
  CognitoPoolArn:
    Type: String
    Description: Cognito userpool used for auth
  DBUrl:
    Type: String
    Description: Database connection Url
  DefaultTimeout:
    Type: Number
    Default: 180
  InfraStack:
    Type: String
    Description: Name of the infrastructure stack
    Default: tagged-image-dev-infra
  Stage:
    Type: String
    Description: Deployment stage
    AllowedValues: ["dev", "staging", "prod"]
Globals:
  Function:
    Timeout: !Ref DefaultTimeout

Resources:
  AccessLogTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "tag-manager-${Stage}-access-table"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  RestAPI:
    Properties:
      Name: !Sub "tag-manager-${Stage}"


  APIHandler:
    Properties:
      AutoPublishAlias: live
      # DeploymentPreference:
      #   Type: AllAtOnce
      Environment:
        Variables:
          ACCESS_LOG_TABLE: !Ref AccessLogTable
          BUCKET_NAME: 
            Fn::ImportValue: !Sub "${InfraStack}:AssetBucket"
          COGNITO_POOL_ARN: !Ref CognitoPoolArn
          DB_URL: !Ref DBUrl
          STAGE: !Ref Stage
      Role:
        Fn::ImportValue: !Sub "${InfraStack}:RoleArn"
      MemorySize: 1536
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue: !Sub "${InfraStack}:LambdaSecurityGroupId"
        SubnetIds:
          - Fn::ImportValue: !Sub "${InfraStack}:PrivateSubnet1Id"
          - Fn::ImportValue: !Sub "${InfraStack}:PrivateSubnet2Id"